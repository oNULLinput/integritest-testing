#!/usr/bin/env node

// Build-time Environment Variable Injection Script
// This script generates the production environment configuration
// by reading actual environment variables and injecting them into the client-side code

const fs = require("fs")
const path = require("path")

console.log("[Build] Starting environment variable injection...")

// Read environment variables
const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL
const SUPABASE_ANON_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

// Validate required environment variables
const requiredVars = {
  NEXT_PUBLIC_SUPABASE_URL: SUPABASE_URL,
  NEXT_PUBLIC_SUPABASE_ANON_KEY: SUPABASE_ANON_KEY,
}

const missing = []
for (const [key, value] of Object.entries(requiredVars)) {
  if (!value || value.trim() === "") {
    missing.push(key)
  }
}

if (missing.length > 0) {
  console.error("[Build] ❌ Missing required environment variables:", missing)
  console.error("[Build] Please set these environment variables in your Vercel project settings.")
  process.exit(1)
}

// Generate the production environment configuration
const envConfigContent = `// Auto-generated Production Environment Configuration
// Generated at build time: ${new Date().toISOString()}
// DO NOT EDIT THIS FILE MANUALLY

(function() {
  'use strict';
  
  console.log("[v0] Loading production environment variables...");
  
  // Production environment variables injected at build time
  const PRODUCTION_ENV = {
    NEXT_PUBLIC_SUPABASE_URL: "${SUPABASE_URL}",
    NEXT_PUBLIC_SUPABASE_ANON_KEY: "${SUPABASE_ANON_KEY}"
  };
  
  // Inject into window.ENV
  window.ENV = window.ENV || {};
  Object.assign(window.ENV, PRODUCTION_ENV);
  
  // Update meta tags with actual values
  const urlMeta = document.querySelector('meta[name="supabase-url"]');
  const keyMeta = document.querySelector('meta[name="supabase-anon-key"]');
  
  if (urlMeta) {
    urlMeta.content = PRODUCTION_ENV.NEXT_PUBLIC_SUPABASE_URL;
  }
  
  if (keyMeta) {
    keyMeta.content = PRODUCTION_ENV.NEXT_PUBLIC_SUPABASE_ANON_KEY;
  }
  
  console.log("[v0] ✅ Production environment variables injected");
  console.log("[v0] Supabase URL:", PRODUCTION_ENV.NEXT_PUBLIC_SUPABASE_URL.substring(0, 30) + "...");
})();
`

// Write the production environment configuration
const outputPath = path.join(__dirname, "..", "public", "lib", "config", "env-production.js")
fs.writeFileSync(outputPath, envConfigContent, "utf8")

console.log("[Build] ✅ Environment configuration generated successfully")
console.log("[Build] Output file:", outputPath)
console.log("[Build] Supabase URL:", SUPABASE_URL.substring(0, 30) + "...")
